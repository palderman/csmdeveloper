% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/csm_render_model.R
\name{csm_render_model}
\alias{csm_render_model}
\title{Render a defined Cropping System Model (CSM)}
\usage{
csm_render_model(
  model,
  name = "dy_dt",
  output_type = c("Rfunction", "Rcode", "deSolve"),
  arg_alias = NULL,
  comment_char = "#",
  line_end = "",
  v_types = c(scalar = "", vector = "")
)
}
\arguments{
\item{model}{a list vector containing a CSM as created by
\code{\link[=csm_create_model]{csm_create_model()}}}

\item{name}{name of the resulting function}

\item{output_type}{a character value indicating the type of output to produce}

\item{arg_alias}{an optional named character vector whose names indicate
variables for which to use an alias within the generated function and whose
elements provide the corresponding alias}

\item{comment_char}{a character value indicating which character to use as a
prefix to comments in the generated code}

\item{line_end}{a character value indicating which character(s) to indicate
the end of a line of source code}

\item{v_types}{a named character vector indicating the names of the variable
types for scalars and vectors in the target output language}
}
\description{
Render a defined Cropping System Model (CSM)
}
\examples{

# Define state variables
lv_state <- csm_create_state(
  c("x", "y"),
  definition = c("prey", "predator"),
  units = c("rabbits per square km", "foxes per square km"),
  expression(~alpha*x-beta*x*y, ~delta*x*y-gamma*y))

# Define parameters
lv_parameters <- csm_create_parameter(
  c("alpha", "beta", "gamma", "delta"),
  definition = c("maximum prey per capita growth rate",
                 "effect of predator population on prey death rate",
                 "predator per capita death rate",
                 "effect of prey population on predator growth rate"),
  units = c("rabbits per rabbit", "per fox",
            "foxes per fox", "foxes per rabbit"))

# Define model
lotka_volterra_model <-
  csm_create_model(
    state = lv_state,
    parms = lv_parameters)

# Render model into R function for calculating rate of change
lotka_volterra_dydt <-
  csm_render_model(lotka_volterra_model,
                   arg_alias = c(parameters = "parms"))

# Render model into raw R code
lotka_volterra_code <-
  csm_render_model(lotka_volterra_model,
                   arg_alias = c(parameters = "parms"),
                   output_type = "Rcode")

# Render model into R function compatible with deSolve package
lotka_volterra_deSolve <-
  csm_render_model(lotka_volterra_model,
                   arg_alias = c(parameters = "parms"),
                   output_type = "deSolve")

}
